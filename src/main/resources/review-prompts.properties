# Claude Code Review Prompt Templates
# 优化的代码审查提示词配置
# 基于 Claude Code 最佳实践：简洁、聚焦、针对性

# 快速审查模式 - 仅关注关键问题
review.prompt.quick=请审查此代码变更，仅报告以下问题：\n\
1. 明显的 Bug 和逻辑错误\n\
2. 安全漏洞（SQL注入、XSS、权限问题等）\n\
3. 性能问题（N+1查询、内存泄漏等）\n\
4. 空指针风险\n\
\n\
请保持简洁，只列出发现的问题。如果没有问题，只需回复"✅ 审查通过"。

# 标准审查模式 - 平衡的审查
review.prompt.standard=请审查此代码变更，重点关注：\n\
\n\
**关键问题：**\n\
- Bug 和潜在的逻辑错误\n\
- 安全漏洞\n\
- 性能瓶颈\n\
- 资源泄漏风险\n\
\n\
**代码质量：**\n\
- 违反 SOLID 原则\n\
- 代码重复（DRY原则）\n\
- 异常处理不当\n\
\n\
**输出格式：**\n\
使用简洁的列表格式：\n\
- ❌ [严重] 问题描述 (位置)\n\
- ⚠️ [警告] 问题描述 (位置)\n\
- 💡 [建议] 改进建议\n\
\n\
如果无问题，回复"✅ 审查通过"。

# 深度审查模式 - 结合上下文的全面分析
review.prompt.deep=你是资深代码审查专家，请对以下代码变更进行深度审查。\n\
\n\
## 审查任务\n\
结合上下文分析每个变更点的影响，发现潜在问题和风险。\n\
\n\
## 问题分级标准（严格遵守）\n\
\n\
### P0 (阻断性) - 必须立即修复\n\
- SQL 注入、XSS、CSRF 等安全漏洞\n\
- 空指针导致服务崩溃\n\
- 数据丢失、数据泄露风险\n\
- 支付、订单等核心业务逻辑错误\n\
- 生产环境稳定性问题\n\
\n\
### P1 (严重) - 下次发布前必须修复\n\
- 重要功能缺陷\n\
- N+1 查询、连接池泄漏等性能问题\n\
- 重要业务流程错误\n\
- 资源泄漏（内存、文件句柄等）\n\
\n\
### P2 (一般) - 建议修复\n\
- 代码质量问题（重复、耦合高）\n\
- 违反编码规范\n\
- 缺少异常处理或日志\n\
- 可维护性差\n\
\n\
### P3 (建议) - 可延后处理\n\
- 变量命名优化\n\
- 注释补充\n\
- 代码格式调整\n\
- 非关键的优化建议\n\
\n\
## 审查重点\n\
\n\
**1. 安全性**\n\
- SQL 注入、XSS、CSRF\n\
- 权限绕过、认证缺失\n\
- 敏感数据泄露\n\
- 密码明文存储\n\
\n\
**2. 正确性**\n\
- 逻辑错误、边界条件\n\
- 空指针、并发问题\n\
- 异常处理完整性\n\
\n\
**3. 性能**\n\
- 数据库查询优化\n\
- 循环嵌套、算法复杂度\n\
- 资源使用、缓存策略\n\
\n\
**4. 可维护性**\n\
- SOLID 原则\n\
- 代码重复（DRY）\n\
- 命名清晰度\n\
\n\
## 输出格式（严格 JSON）\n\
\n\
```json\n\
{\n\
  "summary": "一句话总体评价（30字内）",\n\
  "qualityScore": 85,\n\
  "riskLevel": "low|medium|high|critical",\n\
  "issues": [\n\
    {\n\
      "priority": "P0",\n\
      "severity": "CRITICAL",\n\
      "category": "安全问题",\n\
      "file": "src/main/java/PaymentService.java",\n\
      "line": 123,\n\
      "codeSnippet": "String sql = \\"SELECT * FROM orders WHERE id=\\" + orderId;",\n\
      "description": "直接拼接SQL语句存在注入风险",\n\
      "impact": "攻击者可通过构造特殊orderId获取其他用户订单，导致数据泄露",\n\
      "fixSuggestion": {\n\
        "rootCause": "直接拼接用户输入到SQL语句",\n\
        "fixApproach": "使用PreparedStatement参数化查询",\n\
        "codeExample": "PreparedStatement stmt = conn.prepareStatement(\\"SELECT * FROM orders WHERE id = ?\\");\\nstmt.setLong(1, orderId);",\n\
        "testStrategy": "单元测试验证参数化查询，尝试SQL注入攻击测试",\n\
        "estimatedMinutes": 10,\n\
        "references": ["OWASP Top 10 - Injection", "阿里巴巴Java开发手册"]\n\
      }\n\
    }\n\
  ],\n\
  "suggestions": [\n\
    {\n\
      "category": "测试覆盖",\n\
      "description": "建议为支付核心逻辑添加单元测试，当前覆盖率不足",\n\
      "priority": 8,\n\
      "benefit": "降低Bug引入风险，提升代码可维护性"\n\
    }\n\
  ]\n\
}\n\
```\n\
\n\
## 注意事项\n\
- 每个问题必须指定准确的文件路径和行号\n\
- 优先级分级必须符合标准（P0-P3）\n\
- 修复建议必须具体可执行，最好包含代码示例\n\
- 严格按照 JSON 格式输出，不要有额外的解释文字\n\
- 如果没有发现问题，issues 数组为空，但仍需给出积极的 suggestions

# 安全审查模式 - 专注安全
review.prompt.security=请对此代码变更进行安全审查，检查：\n\
\n\
**注入攻击：**\n\
- SQL 注入风险\n\
- XSS 跨站脚本\n\
- 命令注入\n\
\n\
**认证授权：**\n\
- 身份验证绕过\n\
- 权限控制缺失\n\
- 会话管理问题\n\
\n\
**数据安全：**\n\
- 敏感数据泄露\n\
- 密码明文存储\n\
- 加密问题\n\
\n\
**其他风险：**\n\
- CSRF 攻击\n\
- 文件上传漏洞\n\
- 反序列化漏洞\n\
\n\
仅报告发现的安全问题。使用格式：\n\
- 🔴 [高危] 问题 (位置)\n\
- 🟠 [中危] 问题 (位置)\n\
- 🟡 [低危] 问题 (位置)

# 架构审查模式 - 关注设计
review.prompt.architecture=请从架构设计角度审查此代码变更：\n\
\n\
**分层架构：**\n\
- 职责分离是否清晰\n\
- 层次依赖是否合理\n\
- 是否违反依赖倒置原则\n\
\n\
**模块设计：**\n\
- 耦合度评估\n\
- 内聚性分析\n\
- 接口设计质量\n\
\n\
**可扩展性：**\n\
- 是否遵循开闭原则\n\
- 扩展点设计\n\
- 可测试性\n\
\n\
**技术债务：**\n\
- 代码异味\n\
- 重构建议\n\
\n\
简洁列出发现的架构问题和改进建议。

# 性能审查模式 - 关注性能
review.prompt.performance=请对此代码变更进行性能审查：\n\
\n\
**算法复杂度：**\n\
- 时间复杂度分析\n\
- 空间复杂度分析\n\
- 不必要的循环嵌套\n\
\n\
**数据库操作：**\n\
- N+1 查询问题\n\
- 缺失的索引\n\
- 过度查询\n\
\n\
**资源使用：**\n\
- 内存泄漏风险\n\
- 连接池使用\n\
- 缓存策略\n\
\n\
**并发性能：**\n\
- 锁竞争\n\
- 线程安全问题\n\
\n\
仅报告性能相关问题，保持简洁。

# 全面审查模式 - 详细的审查（不推荐用于自动化）
review.prompt.comprehensive=请对此代码变更进行全面审查：\n\
\n\
## 🔍 代码正确性\n\
- Bug 和逻辑错误\n\
- 边界条件处理\n\
- 异常处理完整性\n\
\n\
## 🔒 安全性\n\
- 注入攻击风险\n\
- 认证授权问题\n\
- 数据安全\n\
\n\
## ⚡ 性能\n\
- 算法效率\n\
- 数据库查询优化\n\
- 资源使用\n\
\n\
## 🏗️ 架构设计\n\
- SOLID 原则遵守情况\n\
- 设计模式应用\n\
- 代码组织结构\n\
\n\
## 📝 代码质量\n\
- 命名规范\n\
- 代码可读性\n\
- 注释质量\n\
- 测试覆盖\n\
\n\
## 输出格式\n\
**总结：** [一句话评价]\n\
\n\
**严重问题：**\n\
- [问题描述] (文件:行号)\n\
\n\
**警告：**\n\
- [问题描述] (文件:行号)\n\
\n\
**建议：**\n\
- [改进建议]\n\
\n\
**风险等级：** [低/中/高]
